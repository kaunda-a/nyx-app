/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedNumbersRouteImport } from './routes/_authenticated/numbers/route'

// Create Virtual Routes

const errors598LazyImport = createFileRoute('/(errors)/598')()
const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authLogoutSuccessLazyImport = createFileRoute('/(auth)/logout-success')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedProxiesIndexLazyImport = createFileRoute(
  '/_authenticated/proxies/',
)()
const AuthenticatedProfilesIndexLazyImport = createFileRoute(
  '/_authenticated/profiles/',
)()
const AuthenticatedPhonesIndexLazyImport = createFileRoute(
  '/_authenticated/phones/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedCrawlersIndexLazyImport = createFileRoute(
  '/_authenticated/crawlers/',
)()
const AuthenticatedSettingsUpdateLazyImport = createFileRoute(
  '/_authenticated/settings/update',
)()
const AuthenticatedSettingsSecurityLazyImport = createFileRoute(
  '/_authenticated/settings/security',
)()
const AuthenticatedSettingsProfileLazyImport = createFileRoute(
  '/_authenticated/settings/profile',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedSettings2faLazyImport = createFileRoute(
  '/_authenticated/settings/2fa',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors598LazyRoute = errors598LazyImport
  .update({
    id: '/(errors)/598',
    path: '/598',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/598.lazy').then((d) => d.Route))

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authLogoutSuccessLazyRoute = authLogoutSuccessLazyImport
  .update({
    id: '/(auth)/logout-success',
    path: '/logout-success',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/logout-success.lazy').then((d) => d.Route),
  )

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedNumbersRouteRoute = AuthenticatedNumbersRouteImport.update({
  id: '/numbers',
  path: '/numbers',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedProxiesIndexLazyRoute =
  AuthenticatedProxiesIndexLazyImport.update({
    id: '/proxies/',
    path: '/proxies/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/proxies/index.lazy').then((d) => d.Route),
  )

const AuthenticatedProfilesIndexLazyRoute =
  AuthenticatedProfilesIndexLazyImport.update({
    id: '/profiles/',
    path: '/profiles/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/profiles/index.lazy').then((d) => d.Route),
  )

const AuthenticatedPhonesIndexLazyRoute =
  AuthenticatedPhonesIndexLazyImport.update({
    id: '/phones/',
    path: '/phones/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/phones/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedCrawlersIndexLazyRoute =
  AuthenticatedCrawlersIndexLazyImport.update({
    id: '/crawlers/',
    path: '/crawlers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/crawlers/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsUpdateLazyRoute =
  AuthenticatedSettingsUpdateLazyImport.update({
    id: '/update',
    path: '/update',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/update.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsSecurityLazyRoute =
  AuthenticatedSettingsSecurityLazyImport.update({
    id: '/security',
    path: '/security',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/security.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsProfileLazyRoute =
  AuthenticatedSettingsProfileLazyImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/profile.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettings2faLazyRoute =
  AuthenticatedSettings2faLazyImport.update({
    id: '/2fa',
    path: '/2fa',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/2fa.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/numbers': {
      id: '/_authenticated/numbers'
      path: '/numbers'
      fullPath: '/numbers'
      preLoaderRoute: typeof AuthenticatedNumbersRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/logout-success': {
      id: '/(auth)/logout-success'
      path: '/logout-success'
      fullPath: '/logout-success'
      preLoaderRoute: typeof authLogoutSuccessLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/598': {
      id: '/(errors)/598'
      path: '/598'
      fullPath: '/598'
      preLoaderRoute: typeof errors598LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/2fa': {
      id: '/_authenticated/settings/2fa'
      path: '/2fa'
      fullPath: '/settings/2fa'
      preLoaderRoute: typeof AuthenticatedSettings2faLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/profile': {
      id: '/_authenticated/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthenticatedSettingsProfileLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/security': {
      id: '/_authenticated/settings/security'
      path: '/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof AuthenticatedSettingsSecurityLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/update': {
      id: '/_authenticated/settings/update'
      path: '/update'
      fullPath: '/settings/update'
      preLoaderRoute: typeof AuthenticatedSettingsUpdateLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/crawlers/': {
      id: '/_authenticated/crawlers/'
      path: '/crawlers'
      fullPath: '/crawlers'
      preLoaderRoute: typeof AuthenticatedCrawlersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/phones/': {
      id: '/_authenticated/phones/'
      path: '/phones'
      fullPath: '/phones'
      preLoaderRoute: typeof AuthenticatedPhonesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/profiles/': {
      id: '/_authenticated/profiles/'
      path: '/profiles'
      fullPath: '/profiles'
      preLoaderRoute: typeof AuthenticatedProfilesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/proxies/': {
      id: '/_authenticated/proxies/'
      path: '/proxies'
      fullPath: '/proxies'
      preLoaderRoute: typeof AuthenticatedProxiesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettings2faLazyRoute: typeof AuthenticatedSettings2faLazyRoute
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsProfileLazyRoute: typeof AuthenticatedSettingsProfileLazyRoute
  AuthenticatedSettingsSecurityLazyRoute: typeof AuthenticatedSettingsSecurityLazyRoute
  AuthenticatedSettingsUpdateLazyRoute: typeof AuthenticatedSettingsUpdateLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettings2faLazyRoute: AuthenticatedSettings2faLazyRoute,
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsProfileLazyRoute:
      AuthenticatedSettingsProfileLazyRoute,
    AuthenticatedSettingsSecurityLazyRoute:
      AuthenticatedSettingsSecurityLazyRoute,
    AuthenticatedSettingsUpdateLazyRoute: AuthenticatedSettingsUpdateLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedNumbersRouteRoute: typeof AuthenticatedNumbersRouteRoute
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedCrawlersIndexLazyRoute: typeof AuthenticatedCrawlersIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedPhonesIndexLazyRoute: typeof AuthenticatedPhonesIndexLazyRoute
  AuthenticatedProfilesIndexLazyRoute: typeof AuthenticatedProfilesIndexLazyRoute
  AuthenticatedProxiesIndexLazyRoute: typeof AuthenticatedProxiesIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedNumbersRouteRoute: AuthenticatedNumbersRouteRoute,
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedCrawlersIndexLazyRoute: AuthenticatedCrawlersIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedPhonesIndexLazyRoute: AuthenticatedPhonesIndexLazyRoute,
  AuthenticatedProfilesIndexLazyRoute: AuthenticatedProfilesIndexLazyRoute,
  AuthenticatedProxiesIndexLazyRoute: AuthenticatedProxiesIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/numbers': typeof AuthenticatedNumbersRouteRoute
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/logout-success': typeof authLogoutSuccessLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/598': typeof errors598LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/2fa': typeof AuthenticatedSettings2faLazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileLazyRoute
  '/settings/security': typeof AuthenticatedSettingsSecurityLazyRoute
  '/settings/update': typeof AuthenticatedSettingsUpdateLazyRoute
  '/crawlers': typeof AuthenticatedCrawlersIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/phones': typeof AuthenticatedPhonesIndexLazyRoute
  '/profiles': typeof AuthenticatedProfilesIndexLazyRoute
  '/proxies': typeof AuthenticatedProxiesIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/numbers': typeof AuthenticatedNumbersRouteRoute
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/logout-success': typeof authLogoutSuccessLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/598': typeof errors598LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/2fa': typeof AuthenticatedSettings2faLazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileLazyRoute
  '/settings/security': typeof AuthenticatedSettingsSecurityLazyRoute
  '/settings/update': typeof AuthenticatedSettingsUpdateLazyRoute
  '/crawlers': typeof AuthenticatedCrawlersIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/phones': typeof AuthenticatedPhonesIndexLazyRoute
  '/profiles': typeof AuthenticatedProfilesIndexLazyRoute
  '/proxies': typeof AuthenticatedProxiesIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/numbers': typeof AuthenticatedNumbersRouteRoute
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/logout-success': typeof authLogoutSuccessLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/(errors)/598': typeof errors598LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/2fa': typeof AuthenticatedSettings2faLazyRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/settings/profile': typeof AuthenticatedSettingsProfileLazyRoute
  '/_authenticated/settings/security': typeof AuthenticatedSettingsSecurityLazyRoute
  '/_authenticated/settings/update': typeof AuthenticatedSettingsUpdateLazyRoute
  '/_authenticated/crawlers/': typeof AuthenticatedCrawlersIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/phones/': typeof AuthenticatedPhonesIndexLazyRoute
  '/_authenticated/profiles/': typeof AuthenticatedProfilesIndexLazyRoute
  '/_authenticated/proxies/': typeof AuthenticatedProxiesIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/numbers'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/settings'
    | '/forgot-password'
    | '/logout-success'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/598'
    | '/'
    | '/settings/2fa'
    | '/settings/account'
    | '/settings/notifications'
    | '/settings/profile'
    | '/settings/security'
    | '/settings/update'
    | '/crawlers'
    | '/help-center'
    | '/phones'
    | '/profiles'
    | '/proxies'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/numbers'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/forgot-password'
    | '/logout-success'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/598'
    | '/'
    | '/settings/2fa'
    | '/settings/account'
    | '/settings/notifications'
    | '/settings/profile'
    | '/settings/security'
    | '/settings/update'
    | '/crawlers'
    | '/help-center'
    | '/phones'
    | '/profiles'
    | '/proxies'
    | '/settings'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/numbers'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/logout-success'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(errors)/598'
    | '/_authenticated/'
    | '/_authenticated/settings/2fa'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/settings/profile'
    | '/_authenticated/settings/security'
    | '/_authenticated/settings/update'
    | '/_authenticated/crawlers/'
    | '/_authenticated/help-center/'
    | '/_authenticated/phones/'
    | '/_authenticated/profiles/'
    | '/_authenticated/proxies/'
    | '/_authenticated/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authLogoutSuccessLazyRoute: typeof authLogoutSuccessLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
  errors598LazyRoute: typeof errors598LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authLogoutSuccessLazyRoute: authLogoutSuccessLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
  errors598LazyRoute: errors598LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/logout-success",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/(errors)/598"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/numbers",
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/crawlers/",
        "/_authenticated/help-center/",
        "/_authenticated/phones/",
        "/_authenticated/profiles/",
        "/_authenticated/proxies/"
      ]
    },
    "/_authenticated/numbers": {
      "filePath": "_authenticated/numbers/route.tsx",
      "parent": "/_authenticated"
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/2fa",
        "/_authenticated/settings/account",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/profile",
        "/_authenticated/settings/security",
        "/_authenticated/settings/update",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/logout-success": {
      "filePath": "(auth)/logout-success.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/(errors)/598": {
      "filePath": "(errors)/598.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/2fa": {
      "filePath": "_authenticated/settings/2fa.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/profile": {
      "filePath": "_authenticated/settings/profile.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/security": {
      "filePath": "_authenticated/settings/security.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/update": {
      "filePath": "_authenticated/settings/update.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/crawlers/": {
      "filePath": "_authenticated/crawlers/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/phones/": {
      "filePath": "_authenticated/phones/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profiles/": {
      "filePath": "_authenticated/profiles/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/proxies/": {
      "filePath": "_authenticated/proxies/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    }
  }
}
ROUTE_MANIFEST_END */
